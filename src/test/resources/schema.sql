CREATE TABLE IF NOT EXISTS users
(
    id       INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    varchar(30) NOT NULL,
    login    varchar(30) NOT NULL,
    name     varchar(30),
    birthday date NOT NULL,
    CONSTRAINT IF NOT EXISTS users_key UNIQUE(email)
);

CREATE TABLE IF NOT EXISTS mpa
(
    id  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(20),
    CONSTRAINT IF NOT EXISTS mpa_key UNIQUE(id,name)
);

CREATE TABLE IF NOT EXISTS film
(
    id           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         varchar(30) NOT NULL,
    description  varchar(200) NOT NULL,
    release_date date NOT NULL,
    duration     int NOT NULL,
    mpa_id          int REFERENCES mpa (id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT IF NOT EXISTS films_key UNIQUE(name,description,release_date,duration,mpa_id)
);

CREATE TABLE IF NOT EXISTS genre
(
    id    INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(20),
    CONSTRAINT IF NOT EXISTS genre_key UNIQUE(name)
);

CREATE TABLE IF NOT EXISTS film_genre
(
    film_id  int NOT NULL REFERENCES film (id) ON DELETE CASCADE ON UPDATE CASCADE,
    genre_id int NOT NULL REFERENCES genre (id) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (film_id,genre_id),
    CONSTRAINT IF NOT EXISTS films_genre UNIQUE(film_id,genre_id)
);

CREATE TABLE IF NOT EXISTS user_friends
(
    id      int ,
    friends_with int,
    confirmed_friend boolean,
    FOREIGN KEY (id) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (friends_with) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT IF NOT EXISTS users_key UNIQUE(id,friends_with,confirmed_friend)
);

CREATE TABLE IF NOT EXISTS film_likes
(
    film_id  int REFERENCES film (id) ON DELETE CASCADE ON UPDATE CASCADE,
    liked_from_id int REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT IF NOT EXISTS films_key UNIQUE(film_id,liked_from_id)
);